/* grid */
.row {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    margin-left: - ($layout-space-mobile);
    margin-right: - ($layout-space-mobile);
    margin-bottom: $layout-space-mobile;
    margin-top: $layout-space-mobile;

    &.reverse {
        flex-direction: row-reverse;
    }

    &.wrap {
        flex-wrap: wrap;
    }
    &.nowrap {
        flex-wrap: nowrap;
    }
    &.wrap-reverse {
        flex-wrap: wrap-reverse;
    }

    &.y-start {
        align-items: flex-start;
    }
    &.y-end {
        align-items: flex-end;
    }
    &.y-center {
        align-items: center;
    }
    &.y-baseline {
        align-items: baseline;
    }
    &.y-stretch {
        align-items: stretch;
    }

    &.x-start {
        justify-content: flex-start;
    }
    &.x-end {
        justify-content: flex-end;
    }
    &.x-center {
        justify-content: center;
    }
    &.x-around {
        justify-content: space-around;
    }
    &.x-between {
        justify-content: space-between;
    }
    &.x-evenly {
        justify-content: space-evenly;
    }

    &.m-0 {
        margin: 0;
        @for $i from 1 through $grid-quantity {
            @for $j from 1 through $i {
                .col-#{$j}_#{$i},
                .col-m-#{$j}_#{$i},
                .col-l-#{$j}_#{$i} {
                    flex: 0 0 calc(100% * #{$j}/#{$i}});
                    margin: 0;
                }
            }
        }
    }

    .col {
        flex: 1;
        margin-left: $layout-space-mobile;
        margin-right: $layout-space-mobile;
    }

    @for $i from 1 through $grid-quantity {
        @for $j from 1 through $i {
            .col-#{$j}_#{$i} {
                flex: 0 0 calc(100% * #{$j}/#{$i} - #{$layout-space-mobile*2});
                margin-left: $layout-space-mobile;
                margin-right: $layout-space-mobile;
            }
        }
    }
}

@media screen and (min-width: $tablet) {
    .row {
        margin-left: - ($layout-space-tablet);
        margin-right: - ($layout-space-tablet);
        margin-bottom: $layout-space-tablet;
        margin-top: $layout-space-tablet;

        .col {
            margin-left: $layout-space-tablet;
            margin-right: $layout-space-tablet;
        }

        @for $i from 1 through $grid-quantity {
            @for $j from 1 through $i {
                .col-m-#{$j}_#{$i} {
                    flex: 0 0 calc(100% * #{$j}/#{$i} - #{$layout-space-tablet*2});
                    margin-left: $layout-space-tablet;
                    margin-right: $layout-space-tablet;
                }
            }
        }
    }
}

@media screen and (min-width: $desktop) {
    .row {
        margin-left: - ($layout-space-desktop);
        margin-right: - ($layout-space-desktop);
        margin-bottom: $layout-space-desktop;
        margin-top: $layout-space-desktop;

        .col {
            margin-left: $layout-space-desktop;
            margin-right: $layout-space-desktop;
        }

        @for $i from 1 through $grid-quantity {
            @for $j from 1 through $i {
                .col-l-#{$j}_#{$i} {
                    flex: 0 0 calc(100% * #{$j}/#{$i} - #{$layout-space-desktop*2});
                    margin-left: $layout-space-desktop;
                    margin-right: $layout-space-desktop;
                }
            }
        }
    }
}

.rowy {
    display: flex;
    flex-direction: column;

    &.reverse {
        flex-direction: column-reverse;
    }

    .coly {
        flex: 1 0;
    }

    @for $i from 1 through $grid-quantity {
        .coly-#{$i} {
            flex: #{$i} 1;
        }
    }
}
